axis.title.y = element_text(face = "bold", size = 15),
axis.text = element_text(size = 12))
df_sm_preds_final <- sm_preds_final %>% na.omit()
sm_r_squared <- cor(df_sm_preds_final$observed_sm, df_sm_preds_final$preds)^2
sm_mae <- mean(abs(df_sm_preds_final$observed_sm - df_sm_preds_final$preds))
sm_rmse <- sqrt(mean((df_sm_preds_final$observed_sm - df_sm_preds_final$preds)^2))
sm_rrmse <- sm_rmse / mean(df_sm_preds_final$observed_sm) * 100
sm_kge <- 1 - sqrt((sm_r_squared - 1)^2 + (mean(df_sm_preds_final$preds) / mean(df_sm_preds_final$observed_sm) - 1)^2)
ggplot(df_sm_preds_final, aes(x = observed_sm, y = preds)) +
geom_point(shape = 21, color = "grey", fill = "steelblue", alpha = 0.5, size = 3) +
geom_abline(slope = 1, intercept = 0, color = "black", size = 1) + # 1:1 line
xlim(0, 10) +
ylim(0, 10) +
theme_bw() +
labs(x = "Observed Soil Moisture", y = "Predicted Soil Moisture") +
# Add metrics as text
annotate("text", x = 0.1, y = 10,
label = paste0(
"R²: ", round(sm_r_squared, 3), "\n",
"MAE: ", round(sm_mae, 3), "\n",
"RMSE: ", round(sm_rmse, 3), "\n",
"RRMSE: ", round(sm_rrmse, 1), "%\n",
"KGE: ", round(sm_kge, 3)
), hjust = 0, vjust = 1) +
theme(aspect.ratio = 1,
text = element_text(size = 18))
full_sm_model <- xgboost(
data = X_train,
label = y_train,
booster = "gbtree",
objective = "reg:squarederror",
nrounds = best_params_sm$nrounds,
max_depth = best_params_sm$max_depth,
colsample_bytree = best_params_sm$colsample_bytree,
min_child_weight = best_params_sm$min_child_weight,
subsample = best_params_sm$subsample,
eta = best_params_sm$eta,
gamma = best_params_sm$gamma,
verbose = 0
)
df_sm_new <- df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred)
df_sm_new$daily_avg_moist_pred <- predict(full_sm_model, as.matrix(df_sm_new))
df_sm_new
df_train
df_train%>%
dplyr::select(-c(Team, team_id, Block_ID, Plot_ID, daily_avg_moist))
df_sm_new <- df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred,
etc_mm_pred)
df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID"))
df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred,
etc_mm_pred) %>%
left_join(df_etc)
df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred) %>%
left_join(df_etc)
df_etc
df_sm_new <- df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred) %>%
left_join(df_etc[,-c("Block_ID", 'Team')])
df_etc
df_sm_new <- df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred) %>%
left_join(df_etc[,-21:22])
df_sm_new <- df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred) %>%
left_join(df_etc[,-c(21:22)])
df_sm_new
df_sm_new <- df_dyn %>%
left_join(df_sta, by = c("Team", "Plot_ID")) %>%
drop_na() %>%
select(-c(Team, Block_ID, Plot_ID)) %>%
select(
Date,
Sand,
Clay,
SOM,
EC_Shallow,
EC_deep,
Planting_date,
Seeding_rate,
N_rate,
TEMP2MMIN,
TEMP2MMAX,
RELHUM2MMAX ,
RELHUM2MMIN ,
PRECIP ,
SRAVG ,
WSPD2MAVG ,
SOILTMP5AVG ,
Irrigation_mm,
NDVI_pred) %>%
left_join(df_etc[,-c(21:23)])
df_sm_new$daily_avg_moist_pred <- predict(full_sm_model, as.matrix(df_sm_new))
df_sm_new <- df_sm_new %>%
left_join(df_sta)
df_sm_new %>%
ggplot()+
geom_line(aes(x=Date, y=daily_avg_moist_pred, color=factor(Plot_ID)), show.legend = F, alpha = 0.5)+
theme_bw()+
xlab("DOY")+
ylab("Predicted Soil Moisture (%)")+
theme(text = element_text(size = 18),
panel.grid = element_blank())
ggplot(df_sm_preds_final, aes(x = observed_sm, y = preds)) +
geom_point(shape = 21, color = "grey", fill = "steelblue", alpha = 0.5, size = 3) +
geom_abline(slope = 1, intercept = 0, color = "black", size = 1) + # 1:1 line
#xlim(0, 10) +
# ylim(0, 10) +
theme_bw() +
labs(x = "Observed Soil Moisture", y = "Predicted Soil Moisture") +
# Add metrics as text
annotate("text", x = 0.1, y = 10,
label = paste0(
"R²: ", round(sm_r_squared, 3), "\n",
"MAE: ", round(sm_mae, 3), "\n",
"RMSE: ", round(sm_rmse, 3), "\n",
"RRMSE: ", round(sm_rrmse, 1), "%\n",
"KGE: ", round(sm_kge, 3)
), hjust = 0, vjust = 1) +
theme(aspect.ratio = 1,
text = element_text(size = 18))
ggplot(df_sm_preds_final, aes(x = observed_sm, y = preds)) +
geom_point(shape = 21, color = "grey", fill = "steelblue", alpha = 0.5, size = 3) +
geom_abline(slope = 1, intercept = 0, color = "black", size = 1) + # 1:1 line
#xlim(0, 10) +
# ylim(0, 10) +
theme_bw() +
labs(x = "Observed Soil Moisture", y = "Predicted Soil Moisture") +
# Add metrics as text
annotate("text", x = 0.1, y = 60,
label = paste0(
"R²: ", round(sm_r_squared, 3), "\n",
"MAE: ", round(sm_mae, 3), "\n",
"RMSE: ", round(sm_rmse, 3), "\n",
"RRMSE: ", round(sm_rrmse, 1), "%\n",
"KGE: ", round(sm_kge, 3)
), hjust = 0, vjust = 1) +
theme(aspect.ratio = 1,
text = element_text(size = 18))
ggplot(df_sm_preds_final, aes(x = observed_sm, y = preds)) +
geom_point(shape = 21, color = "grey", fill = "steelblue", alpha = 0.5, size = 3) +
geom_abline(slope = 1, intercept = 0, color = "black", size = 1) + # 1:1 line
xlim(20, 70) +
ylim(20, 70) +
theme_bw() +
labs(x = "Observed Soil Moisture", y = "Predicted Soil Moisture") +
# Add metrics as text
annotate("text", x = 0.1, y = 60,
label = paste0(
"R²: ", round(sm_r_squared, 3), "\n",
"MAE: ", round(sm_mae, 3), "\n",
"RMSE: ", round(sm_rmse, 3), "\n",
"RRMSE: ", round(sm_rrmse, 1), "%\n",
"KGE: ", round(sm_kge, 3)
), hjust = 0, vjust = 1) +
theme(aspect.ratio = 1,
text = element_text(size = 18))
ggplot(df_sm_preds_final, aes(x = observed_sm, y = preds)) +
geom_point(shape = 21, color = "grey", fill = "steelblue", alpha = 0.5, size = 3) +
geom_abline(slope = 1, intercept = 0, color = "black", size = 1) + # 1:1 line
xlim(20, 70) +
ylim(20, 70) +
theme_bw() +
labs(x = "Observed Soil Moisture", y = "Predicted Soil Moisture") +
# Add metrics as text
annotate("text", x = 20, y = 60,
label = paste0(
"R²: ", round(sm_r_squared, 3), "\n",
"MAE: ", round(sm_mae, 3), "\n",
"RMSE: ", round(sm_rmse, 3), "\n",
"RRMSE: ", round(sm_rrmse, 1), "%\n",
"KGE: ", round(sm_kge, 3)
), hjust = 0, vjust = 1) +
theme(aspect.ratio = 1,
text = element_text(size = 18))
ggplot(df_sm_preds_final, aes(x = observed_sm, y = preds)) +
geom_point(shape = 21, color = "grey", fill = "steelblue", alpha = 0.5, size = 3) +
geom_abline(slope = 1, intercept = 0, color = "black", size = 1) + # 1:1 line
xlim(20, 70) +
ylim(20, 70) +
theme_bw() +
labs(x = "Observed Soil Moisture", y = "Predicted Soil Moisture") +
# Add metrics as text
annotate("text", x = 20, y = 70,
label = paste0(
"R²: ", round(sm_r_squared, 3), "\n",
"MAE: ", round(sm_mae, 3), "\n",
"RMSE: ", round(sm_rmse, 3), "\n",
"RRMSE: ", round(sm_rrmse, 1), "%\n",
"KGE: ", round(sm_kge, 3)
), hjust = 0, vjust = 1) +
theme(aspect.ratio = 1,
text = element_text(size = 18))
df_sm_new
df_sm_new %>% write.csv("../data/procesed/sm_pred.csv")
knitr::opts_chunk$set(echo = TRUE,
message = F,
warning = F)
library(tidyverse)
library(sf)
library(mgcv)
library(sp)
library(gstat)
AWC.df <- texture.df %>%
mutate(Clay = Clay/100,
Sand = Sand/100,
SOM = SOM/100,
FC = -0.251 * Sand + 0.195 * Clay + 0.011 * SOM +
0.006 * (Sand * SOM) - 0.027 * (Clay * SOM) +
0.452 * (Sand * Clay) + 0.299,
PWP = - 0.024 * Sand + 0.487 * Clay + 0.006 * SOM +
0.005 * (Sand * SOM) - 0.013 * (Clay * SOM) +
0.068 * (Sand * Clay) + 0.031,
BD = 1.33,
AWC_pctg = FC - PWP,
AWC_mm = AWC_pctg*BD/100,
Porosity = 0.332-0.0007251*Sand+0.1276*log10(Clay))
texture.df <- st_join(plot_centroid,
krig_sand_sf %>% rename(Sand = var1.pred)) %>%
st_join(krig_clay_sf %>% rename(Clay = var1.pred)) %>%
st_join(krig_som_sf %>% rename(SOM = var1.pred)) %>%
as.data.frame() %>%
dplyr::select(2:9, -6, -8)
soil <- readxl::read_excel('data/Soil_Analysis/Soil Analysis/24 KSU TAPS Soil texture.xlsx', skip = 1)
soil2 <- soil %>%
mutate(FC = 0.31* `Clay (%)` + 0.15 * `Silt (%)` + 0.13,
PWP = 0.14 * `Clay (%)` + 0.02 * `Silt (%)` + 0.11,
BD = case_when(`Soil Textural Class` == 'Silty Clay Loam' ~ 1.35,
`Soil Textural Class` == 'Silt Loam' ~ 1.30,
`Soil Textural Class` == 'Clay Loam' ~ 1.35
),
AWC_pctg = FC - PWP) %>%
separate(`Sample Depth (in)`,
sep = '-',
into = c('Depth1', 'Depth2'),
remove = F, convert = T) %>%
mutate(Depth_mm = (Depth2 - Depth1)*25.4,
AWC_mm = AWC_pctg*BD*Depth_mm/100)
plots <- st_read("data/Plot_Boundary/Plot boundaries/Map with all plots/2024_Colby_TAPS_Harvest_Area.shp")
ECdata <- read.csv("data/ECdata/EC Data/2024_TAPS_Veris_raw_spatial_data.csv", sep = ';', dec = ',')
ECdata_sf <- st_as_sf(ECdata, coords = c("Long", "Lat"), crs = st_crs(plots))
ECplots <- st_join(ECdata_sf, plots)
EC_byplot <- ECplots %>%
group_by(Plot_ID) %>%
summarise(EC_Shallow = mean(EC.SH, na.rm = TRUE),
EC_deep = mean(EC.DP, na.rm = T)) %>%
na.omit()
EC_byplot
plot_centroid <- st_centroid(plots)
ggplot()+
geom_sf(data = plot_centroid, shape = 21, fill = 'steelblue', alpha = .5)+
geom_point(data = soil2, aes (Lng, Lat), shape = 22, fill = 'tomato')+
theme_bw()+
theme(panel.grid = element_blank())
plots %>% as.data.frame() %>%
count(TRT_ID)
#write.csv(EC_byplot[1:3] %>% as.data.frame(), 'data/procesed/EC.csv')
mod.df  <- soil2 %>%
dplyr::select(X = Lng, Y = Lat, Clay = `Clay (%)`, Silt = `Silt (%)`, Sand = `Sand (%)`, SOM = `OMC (%)`, Depth1) %>%
group_by(X, Y) %>%
filter(Depth1 == min(Depth1))
Clay.df <- SpatialPointsDataFrame(mod.df[,1:2], data = mod.df["Clay"])
proj4string(Clay.df) <- CRS("+proj=longlat +datum=WGS84 +no_defs")
new.df <- as(plot_centroid, 'Spatial')
variogram_model_clay <- variogram(Clay ~ 1, Clay.df)
# Fit a model to the variogram
variogram_fit_clay <- fit.variogram(variogram_model_clay, model = vgm(nugget = 1, model = "Sph", range = 0.1, sill = 1))
# Perform kriging
kriging_clay <- krige(Clay ~ 1, Clay.df, newdata = new.df, model = variogram_fit_clay)
krig_clay_sf <- st_as_sf(kriging_clay)
ggplot() +
geom_sf(data = krig_clay_sf, aes(fill = var1.pred), shape = 21, size = 4) +
scale_fill_viridis_c('Clay content', option = "C") +
theme_bw()+
theme(panel.grid = element_blank())
Sand.df <- SpatialPointsDataFrame(mod.df[,1:2], data = mod.df["Sand"])
proj4string(Sand.df) <- CRS("+proj=longlat +datum=WGS84 +no_defs")
variogram_model_sand <- variogram(Sand ~ 1, Sand.df)
# Fit a model to the variogram
variogram_fit_sand <- fit.variogram(variogram_model_sand, model = vgm(nugget = 1, model = "Sph", range = 0.1, sill = 1))
# Perform kriging
kriging_sand <- krige(Sand ~ 1, Sand.df, newdata = new.df, model = variogram_fit_sand)
krig_sand_sf <- st_as_sf(kriging_sand)
ggplot() +
geom_sf(data = krig_sand_sf, aes(fill = var1.pred), shape = 21, size = 4) +
scale_fill_viridis_c('Sand content', option = "C") +
theme_bw()+
theme(panel.grid = element_blank())
SOM.df <- SpatialPointsDataFrame(mod.df[,1:2], data = mod.df["SOM"])
proj4string(SOM.df) <- CRS("+proj=longlat +datum=WGS84 +no_defs")
variogram_model_som <- variogram(SOM ~ 1, SOM.df)
# Fit a model to the variogram
variogram_fit_som <- fit.variogram(variogram_model_som, model = vgm(nugget = 1, model = "Sph", range = 0.1, sill = 1))
# Perform kriging
kriging_som <- krige(SOM ~ 1, SOM.df, newdata = new.df, model = variogram_fit_som)
krig_som_sf <- st_as_sf(kriging_som)
ggplot() +
geom_sf(data = krig_som_sf, aes(fill = var1.pred), shape = 21, size = 4) +
scale_fill_viridis_c('SOM content', option = "C") +
theme_bw()+
theme(panel.grid = element_blank())
texture.df <- st_join(plot_centroid,
krig_sand_sf %>% rename(Sand = var1.pred)) %>%
st_join(krig_clay_sf %>% rename(Clay = var1.pred)) %>%
st_join(krig_som_sf %>% rename(SOM = var1.pred)) %>%
as.data.frame() %>%
dplyr::select(2:9, -6, -8)
#write.csv(texture.df, 'data/procesed/texture.csv')
AWC.df <- texture.df %>%
mutate(Clay = Clay/100,
Sand = Sand/100,
SOM = SOM/100,
FC = -0.251 * Sand + 0.195 * Clay + 0.011 * SOM +
0.006 * (Sand * SOM) - 0.027 * (Clay * SOM) +
0.452 * (Sand * Clay) + 0.299,
PWP = - 0.024 * Sand + 0.487 * Clay + 0.006 * SOM +
0.005 * (Sand * SOM) - 0.013 * (Clay * SOM) +
0.068 * (Sand * Clay) + 0.031,
BD = 1.33,
AWC_pctg = FC - PWP,
AWC_mm = AWC_pctg*BD/100,
Porosity = 0.332-0.0007251*Sand+0.1276*log10(Clay))
#write.csv(AWC.df, 'data/procesed/AWC_by_plot.csv')
AWC.df
AWC.df <- texture.df %>%
mutate(Clay = Clay/100,
Sand = Sand/100,
SOM = SOM/100,
FC = -0.251 * Sand + 0.195 * Clay + 0.011 * SOM +
0.006 * (Sand * SOM) - 0.027 * (Clay * SOM) +
0.452 * (Sand * Clay) + 0.299,
PWP = - 0.024 * Sand + 0.487 * Clay + 0.006 * SOM +
0.005 * (Sand * SOM) - 0.013 * (Clay * SOM) +
0.068 * (Sand * Clay) + 0.031,
BD = 1.33,
AWC_pctg = FC - PWP,
AWC_mm = AWC_pctg*BD/100,
Porosity = 0.332-0.0007251*Sand*100+0.1276*log10(Clay*100))
AWC.df <- texture.df %>%
mutate(Clay = Clay/100,
Sand = Sand/100,
SOM = SOM/100,
FC = -0.251 * Sand + 0.195 * Clay + 0.011 * SOM +
0.006 * (Sand * SOM) - 0.027 * (Clay * SOM) +
0.452 * (Sand * Clay) + 0.299,
PWP = - 0.024 * Sand + 0.487 * Clay + 0.006 * SOM +
0.005 * (Sand * SOM) - 0.013 * (Clay * SOM) +
0.068 * (Sand * Clay) + 0.031,
BD = 1.33,
AWC_pctg = FC - PWP,
AWC_mm = AWC_pctg*BD/100,
Porosity = 0.332-0.0007251*Sand*100+0.1276*log10(Clay*100))
AWC.df
write.csv(AWC.df, 'data/procesed/AWC_by_plot.csv')
